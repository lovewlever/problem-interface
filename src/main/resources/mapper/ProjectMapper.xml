<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.problem.pl.model.dao.ProjectMapper">
    <resultMap id="userResultMap" type="com.problem.pl.model.entities.TProjectEntity">
        <id column="id" property="id" javaType="String"/>
        <result column="project_name" property="projectName" javaType="java.lang.String"/>
        <result column="project_is_public" property="projectIsPublic" javaType="java.lang.String"/>
        <result column="project_desc" property="projectDesc" javaType="java.lang.String"/>
        <result column="overall_progress" property="overallProgress" javaType="java.lang.Double" jdbcType="VARCHAR"/>
        <result column="project_level" property="projectLevel" javaType="java.lang.Integer"/>
        <result column="project_add_timestamp" property="projectAddTimestamp" javaType="java.lang.Long"/>
        <result column="user_id" property="userId" javaType="java.lang.String"/>
        <association property="tUserEntity"
                     column="user_id"
                     javaType="com.problem.pl.model.entities.TUserEntity">
            <id column="user_id" property="id"/>
            <result column="u_nickname" property="uNickname" javaType="java.lang.String"/>
        </association>
        <association property="tProjectProblemEntity"
                     javaType="com.problem.pl.model.entities.TProjectProblemEntity"
                     resultMap="getNewProblem">
        </association>
    </resultMap>

    <resultMap id="getNewProblem" type="com.problem.pl.model.entities.TProjectProblemEntity">
        <result column="tpp_id" property="id" javaType="String" jdbcType="VARCHAR"/>
        <result column="pp_content" property="ppContent" javaType="java.lang.String"/>
        <result column="pp_add_timestamp" property="ppAddTimestamp" javaType="java.lang.Long"/>
    </resultMap>

    <select id="queryProjectById" parameterType="java.lang.String" resultMap="userResultMap">
        select * from T_PROJECT tp left join T_USER tu on tp.user_id = tu.id where tp.id = #{projectId}
    </select>


    <select id="queryPListByPagination" resultMap="userResultMap">
        select tp.*,tpp.*,tpp.id tpp_id,tu.*,((select sum(pp_complete_schedule) from T_PROJECT_PROBLEM where project_id = tp.id )
            / (select count(0) from T_PROJECT_PROBLEM where project_id = tp.id)) overall_progress
        from T_PROJECT tp
                 left join (select * from T_PROJECT_PROBLEM order by pp_add_timestamp DESC limit 1) tpp on tp.id = tpp.project_id
                 left join T_USER tu on tp.user_id = tu.id
        group by tp.id
        order by tp.project_add_timestamp DESC
        limit #{startPos},#{pageCountSize}
    </select>

    <select id="queryPListByUserIdAndPagination" resultMap="userResultMap">
        select tp.*,tpp.*,tpp.id tpp_id,tu.*,((select sum(pp_complete_schedule) from T_PROJECT_PROBLEM where project_id = tp.id )
            / (select count(0) from T_PROJECT_PROBLEM where project_id = tp.id)) overall_progress
        from T_PROJECT tp
                 left join (select * from T_PROJECT_PROBLEM order by pp_add_timestamp DESC limit 1) tpp on tp.id = tpp.project_id
                 left join T_USER tu on tp.user_id = tu.id
        where tp.user_id = #{userId}  group by tp.id
        order by tp.project_add_timestamp DESC
        limit  #{startPos},#{pageCountSize};
    </select>

    <select id="queryRecommendProjectLabelsForProblem" resultMap="userResultMap">
        select distinct tp.project_name,tp.id from T_PROJECT tp
        right join T_PROJECT_PROBLEM tpp on tp.id = tpp.project_id
        where tpp.user_id_for_choose = #{userId}
        order by tpp.pp_choose_timestamp
        limit #{labelNum}
    </select>

    <select id="queryProjectToLabelsByPagination" resultMap="userResultMap">
        select T_PROJECT.id,T_PROJECT.project_name
        from T_PROJECT order by project_add_timestamp DESC
        LIMIT #{startPos},#{pageCountSize}
    </select>

    <insert id="saveNewProjectInfo" parameterType="com.problem.pl.model.entities.TProjectEntity">
        insert into T_PROJECT (id, project_name, project_level, project_desc, project_add_timestamp,
                               user_id)
        VALUES (#{id}, #{projectName}, #{projectLevel},#{projectDesc}, #{projectAddTimestamp},
                #{userId})
    </insert>


    <!--?????-->
    <select id="findProjectTotalCount" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM T_PROJECT
    </select>

    <select id="findProjectTotalCountByUserId" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM T_PROJECT WHERE user_id = #{userId}
    </select>

    <!--?? ???-->
    <update id="modifyProjectPriority">
        UPDATE T_PROJECT SET project_level = #{priority} WHERE id = #{pid}
    </update>

    <update id="modifyProjectName">
        UPDATE T_PROJECT SET project_name = #{projectName} WHERE id = #{projectId}
    </update>

    <delete id="deleteProjectById">
        DELETE FROM T_PROJECT WHERE id = #{projectId}
    </delete>
</mapper>
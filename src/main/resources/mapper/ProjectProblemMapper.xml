<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.problem.pl.model.dao.ProjectProblemMapper">
    <resultMap id="userResultMap" type="com.problem.pl.model.entities.TProjectProblemEntity">
        <id column="id" property="id" javaType="String"/>
        <result column="pp_choose_timestamp" property="ppChooseTimestamp" javaType="java.lang.Long"/>
        <result column="pp_complete_timestamp" property="ppCompleteTimestamp" javaType="java.lang.Long"/>
        <result column="pp_add_timestamp" property="ppAddTimestamp" javaType="java.lang.Long"/>
        <result column="pp_complete_schedule" property="ppCompleteSchedule" javaType="java.lang.Integer"/>
        <result column="pp_module_page" property="ppModulePage" javaType="java.lang.String"/>
        <result column="pp_content" property="ppContent" javaType="java.lang.String"/>
        <result column="pp_transfer_flow" property="ppTransferFlow" javaType="java.lang.String"/>
        <result column="project_id" property="projectId" javaType="java.lang.String"/>
        <result column="user_id_for_choose" property="userIdForChoose" javaType="java.lang.String"/>
        <result column="user_id_for_add" property="userIdForAdd" javaType="java.lang.String"/>
        <result column="system_devices_id" property="systemDevicesId" javaType="java.lang.String"/>
        <collection property="refTProjectEntity" javaType="com.problem.pl.model.entities.TProjectEntity">
            <id column="project_id" property="id"/>
            <result column="project_name" property="projectName" javaType="java.lang.String"/>
        </collection>
        <collection property="refTProjectSystemDevicesEntity" javaType="com.problem.pl.model.entities.TProjectSystemDevicesEntity">
            <id column="system_devices_id" property="id"/>
            <result column="system_devices_name" property="systemDevicesName" javaType="java.lang.String"/>
        </collection>
        <collection property="chooseProblemTUserEntity" javaType="com.problem.pl.model.entities.TUserEntity">
            <id column="user_id_for_choose" property="id"/>
            <result column="u_nickname" property="uNickname" javaType="java.lang.String"/>
        </collection>
    </resultMap>


    <insert id="insertBatchProjectProblems" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="false">
        insert into t_project_problem(id,pp_add_timestamp,pp_module_page,pp_content,project_id,system_devices_id,user_id_for_add) values
        <foreach collection="tppes" item="pro" index="index" separator=",">(
            #{pro.id},
            #{pro.ppAddTimestamp},
            #{pro.ppModulePage},
            #{pro.ppContent},
            #{pro.projectId},
            #{pro.systemDevicesId},
            #{pro.userIdForAdd}
            )
        </foreach>
    </insert>

    <!--查询我选中未修改完的问题-->
    <select id="queryMineNotCompletedProblems" resultMap="userResultMap">
        select tpp.*,tp.project_name,tpsd.system_devices_name,tu.u_nickname
        from t_project_problem tpp
                 left join t_project tp on tpp.project_id = tp.id
                 left join t_project_system_devices tpsd on tpp.system_devices_id = tpsd.id
                 left join t_user tu on tpp.user_id_for_choose = tu.id
        where user_id_for_choose = #{uid} and pp_complete_schedule &lt; 100
        order by pp_add_timestamp desc limit #{startPos},#{pageCountSize}
    </select>

    <!--查询我选中未修改完的问题的总数量-->
    <select id="getMineNotCompletedProblemsCount" resultType="java.lang.Integer">
        select COUNT(0)
        from t_project_problem
        where user_id_for_choose = #{uid} and pp_complete_schedule &lt; 100
    </select>

    <!--查询我选中已经修改完的问题-->
    <select id="queryMineCompletedProblems" resultMap="userResultMap">
        select tpp.*,tp.project_name,tpsd.system_devices_name,tu.u_nickname
        from t_project_problem tpp
                 left join t_project tp on tpp.project_id = tp.id
                 left join t_project_system_devices tpsd on tpp.system_devices_id = tpsd.id
                 left join t_user tu on tpp.user_id_for_choose = tu.id
        where user_id_for_choose = #{uid} and pp_complete_schedule >= 100
        order by pp_add_timestamp desc limit #{startPos},#{pageCountSize}
    </select>

    <!--查询我选中已经修改完的问题的总数量-->
    <select id="getMineCompletedProblemsCount" resultType="java.lang.Integer">
        select COUNT(0)
        from t_project_problem
        where user_id_for_choose = #{uid} and pp_complete_schedule >= 100
    </select>


    <select id="queryProjectProblemsListByProjectId" resultMap="userResultMap">
        select tpp.*,tp.project_name,tpsd.system_devices_name,tu.u_nickname
        from t_project_problem tpp
                 left join t_project tp on tpp.project_id = tp.id
                 left join t_project_system_devices tpsd on tpp.system_devices_id = tpsd.id
                 left join t_user tu on tpp.user_id_for_choose = tu.id
        where project_id = #{projectId} order by pp_add_timestamp desc limit #{startPos},#{pageCountSize}
    </select>

    <select id="getPPListByProjectIdCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(0) from t_project_problem where project_id = #{projectId}
    </select>

    <select id="queryNewProblems" resultMap="userResultMap" parameterType="java.lang.Integer">
        select tpp.*,tp.project_name,tpsd.system_devices_name,tu.u_nickname
        from t_project_problem tpp
                                              left join t_project tp on tpp.project_id = tp.id
                                              left join t_project_system_devices tpsd on tpp.system_devices_id = tpsd.id
                                              left join t_user tu on tpp.user_id_for_choose = tu.id
        where tpp.pp_complete_schedule &lt; 100
        order by tpp.pp_add_timestamp desc limit #{pageCount}
    </select>

    <!--选择问题修改-->
    <update id="updateChooseProblem" parameterType="com.problem.pl.model.entities.TProjectProblemEntity">
        update t_project_problem set pp_choose_timestamp = #{ppChooseTimestamp} ,user_id_for_choose = #{userIdForChoose} where id = #{id}
    </update>

    <!--取消选择一个问题-->
    <update id="updateCancelChooseProblem" parameterType="com.problem.pl.model.entities.TProjectProblemEntity">
        update t_project_problem set pp_choose_timestamp = #{ppChooseTimestamp} ,
                                     user_id_for_choose = #{userIdForChoose} where id = #{id}
    </update>

    <select id="queryProblemById" parameterType="java.lang.String" resultMap="userResultMap">
        select tpp.*,tp.project_name,tpsd.system_devices_name,tu.u_nickname from t_project_problem tpp
            left join t_project tp on tpp.project_id = tp.id
            left join t_project_system_devices tpsd on tpp.system_devices_id = tpsd.id
            left join t_user tu on tpp.user_id_for_choose = tu.id
        where tpp.id = #{problemId}
    </select>

    <!--Update problem progress-->
    <update id="updateModifyProblemProgress" parameterType="com.problem.pl.model.entities.TProjectProblemEntity">
        update t_project_problem set pp_complete_schedule = #{ppCompleteSchedule} , pp_complete_timestamp = #{ppCompleteTimestamp} where id = #{id}
    </update>
</mapper>